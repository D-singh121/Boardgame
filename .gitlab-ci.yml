stages:          # List of stages for jobs, and their order of execution
  - Install_tools
  - test
  - security
  - build
  - docker
  - deploy
  
Install_javaJdk_docker_trivy_kubectl:
  stage: Install_tools
  script:
    - echo "Installing JDK..."
    - sudo apt update -y && sudo apt install openjdk-17-jre-headless -y
    - sudo apt update -y && sudo apt install maven -y
    - sudo apt install docker.io -y && sudo chmod 666 /var/run/docker.sock && sudo usermod -aG docker $USER
    - sudo apt-get install wget apt-transport-https gnupg lsb-release -y
    - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    - echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
    - sudo apt-get update -y && sudo apt-get install trivy -y
    - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - sudo mv ./kubectl /usr/local/bin
  tags:
    - self-hosted

unit_testing:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests...."
    - mvn test
  tags:
    - self-hosted

trivy_fs_scan:   # This job runs in the test stage.
  stage: security    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running security file checks...."
    - trivy fs --format table -o fs.html .
  tags:
    - self-hosted

sonarqube-check:
  stage: security
  image: 
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main
  
build_app:
  stage: build
  script:
    mvn package
  tags:
    - self-hosted
  only:
    - main

image_building_and_tagging_pushing_to_dockerhub:
  stage: docker
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - mvn package
    - docker build -t devesh121/boardgame:latest .
    - docker push devesh121/boardgame:latest
  only:
    - main
  tags:
    - self-hosted

k8s_deployment:
  stage: deploy
  variables:
    KUBECONFIG_PATH: /home/ubuntu/.kube/config
  before_script:
    - mkdir -p $(dirname "$KUBECONFIG_PATH")
    - echo "$KUBECONFIG_CONTENT" | base64 -d > "$KUBECONFIG_PATH"
    - export KUBECONFIG="$KUBECONFIG_PATH"
  script:
    - kubectl apply -f deployment-service.yaml
  tags:
    - self-hosted
  only:
    - main
  
  


